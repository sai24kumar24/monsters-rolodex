{"version":3,"sources":["../../monsters/src/components/card/card.component.jsx","../../monsters/src/components/cardlist/cardlist.component.jsx","../../monsters/src/components/search-box/search-box.component.jsx","../../monsters/src/App.js","../../monsters/src/reportWebVitals.js","../../monsters/src/index.js"],"names":["Card","props","name","id","email","monster","React","createElement","className","key","alt","concat","src","CardList","_ref","monsters","map","SearchBox","placeHolder","onChangeHandler","type","placeholder","onChange","App","seachField","setSearchField","useState","setMonsters","filteredMonsters","setfilteredMonsters","useEffect","fetch","then","response","json","users","newFilteredMonsters","filter","toLocaleLowerCase","includes","event","searchFieldString","target","value","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"mRAwCeA,MApCDC,IAEZ,CACI,MAAMC,KAACA,EAAIC,GAAEA,EAAEC,MAAEA,GAASH,EAAMI,QAChC,OACIC,IAAAC,cAAA,OAAKC,UAAU,iBAAiBC,IAAKN,GACjCG,IAAAC,cAAA,OAAKG,IAAG,WAAAC,OAAaT,GACnBU,IAAG,wBAAAD,OAA0BR,EAAE,4BAEjCG,IAAAC,cAAA,UAAKL,GACLI,IAAAC,cAAA,SAAIH,YC6BHS,MApCEC,IAAA,IAACC,SAACA,GAASD,EAAA,OAGpBR,IAAAC,cAAA,OAAKC,UAAU,aACTO,EAASC,IAAKX,GAGZC,IAAAC,cAACP,EAAI,CAACS,IAAKJ,EAAQF,GAAGE,QAAUA,aC4BjCY,MAtCGH,IAA+C,IAA9CN,UAACA,EAASU,YAAEA,EAAWC,gBAAEA,GAAgBL,EAIpD,OACIR,IAAAC,cAAA,SAEAC,UAAS,cAAAG,OAAgBH,GACzBY,KAAK,SAELC,YAAaH,EACZI,SAAWH,WCkCTI,MA3CHA,KAEV,MAAOC,EAAYC,GAAkBC,mBAAS,KACvCX,EAAUY,GAAeD,mBAAS,KAClCE,EAAkBC,GAAuBH,mBAASX,GAGzDe,oBAAU,KACRC,MAAM,8CACCC,KAAMC,GAAaA,EAASC,QAC5BF,KAAMG,GAAUR,EAAYQ,KAClC,IAEHL,oBAAU,KACR,MAAMM,EAAsBrB,EAASsB,OAAQhC,GACpCA,EAAQH,KAAKoC,oBAAoBC,SAASf,IAGnDK,EAAoBO,IACnB,CAACrB,EAAUS,IAUd,OACElB,IAAAC,cAAA,OAAKC,UAAU,OACXF,IAAAC,cAAA,MAAIC,UAAU,aAAY,oBAE1BF,IAAAC,cAACU,EAAS,CACRE,gBAbgBqB,IAClB,MAAMC,EAAmBD,EAAME,OAAOC,MAAML,oBACzCb,EAAegB,IAYjBvB,YAAc,kBACdV,UAAU,wBACXF,IAAAC,cAACM,EAAQ,CAACE,SAAUa,MC/BbgB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAhB,KAAAe,EAAAE,KAAA,UAAqBjB,KAAKlB,IAAiD,IAAhDoC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASxC,EACpEoC,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrD,IAAAC,cAACD,IAAMsD,WAAU,KACftD,IAAAC,cAACgB,EAAG,QAORqB","file":"static/js/main.67ffcdcb.chunk.js","sourcesContent":["// import {Component} from 'react';\nimport React from 'react';\nimport './card.style.css';\n\nconst Card = (props) => {\n\n  {\n      const {name, id, email} = props.monster;\n      return(\n          <div className=\"card-container\" key={id}>\n              <img alt={`monster ${name}`} \n                src={`https://robohash.org/${id}?set=set2&size=180x180`}\n              />\n              <h2>{name}</h2>\n              <p>{email}</p>\n          </div>\n      )\n  }\n}\n\n\n\n\n\n// class Card extends Component{\n\n//     render(){\n//         const {name, id, email} = this.props.monster;\n//         return(\n//             <div className=\"card-container\" key={id}>\n//                         <img alt={`monster ${name}`} \n//                           src={`https://robohash.org/${id}?set=set2&size=180x180`}\n//                         />\n//                       <h2>{name}</h2>\n//                       <p>{email}</p>\n//                     </div>\n//         )\n//     }\n// }\n\nexport default Card;","// import { Component } from \"react\";\nimport React from \"react\";\nimport Card from \"../card/card.component\";\nimport './cardlist.styles.css';\n\n\n\nconst CardList = ({monsters}) =>\n    // const {monsters} = props;\n(\n        <div className=\"card-list\">\n            { monsters.map((monster)=>{\n            // const {name, id, email} = monster;\n            return(    \n                <Card key={monster.id}monster ={monster}/>\n\n                    )})}\n                    \n            </div>\n    );\n\n\n// class CardList extends Component    {\n   \n//     render(){\n//         // console.log(this.props.monsters)\n//         console.log('render from CardList');\n//         const {monsters} = this.props;\n\n//         return (\n//             <div className=\"card-list\">\n//                { monsters.map((monster)=>{\n//                 // const {name, id, email} = monster;\n//                 return(    \n//                     <Card monster ={monster}/>\n\n//                       )})}\n                       \n//               </div>\n//         )\n//     }\n// }\n\nexport default CardList;","// import { Component } from \"react\";\nimport React from 'react';\nimport './search-box.styles.css';\n\nconst SearchBox = ({className, placeHolder, onChangeHandler}) => {\n    \n        // console.log(this.props);\n        // const {onSearchChange} = this.props;\n        return (\n            <input\n            //  className='search-box' \n            className={`search-box ${className}`}\n            type='search' \n            // placeholder='Search Monsters'\n            placeholder={placeHolder}\n             onChange= {onChangeHandler} />\n        )\n    \n}\n\n\n\n\n\n\n\n// class SearchBox extends Component{\n//     render(){\n//         // console.log(this.props);\n//         const {onSearchChange} = this.props;\n//         return (\n//             <input\n//             //  className='search-box' \n//             className={`search-box ${this.props.className}`}\n//             type='search' \n//             // placeholder='Search Monsters'\n//             placeholder={this.props.placeHolder}\n//              onChange= {this.props.onChangeHandler} />\n//         )\n//     }\n// }\n\nexport default SearchBox;","import { useState, useEffect } from 'react';\nimport React from 'react';\nimport CardList from './components/cardlist/cardlist.component';\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css';\n\nconst App = () =>{\n  \n  const [seachField, setSearchField] = useState(''); // [value, setValue]\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setfilteredMonsters] = useState(monsters);\n  \n  // console.log('render');\n  useEffect(()=>{\n    fetch('https://jsonplaceholder.typicode.com/users')\n          .then((response) => response.json() )\n          .then((users) => setMonsters(users));  \n  }, []);\n\n  useEffect(()=>{\n    const newFilteredMonsters = monsters.filter((monster)=>{\n      return monster.name.toLocaleLowerCase().includes(seachField);\n    });\n\n    setfilteredMonsters(newFilteredMonsters);\n  }, [monsters, seachField ]);\n\n  const onSearchChange = (event) => {\n        const searchFieldString= event.target.value.toLocaleLowerCase();\n           setSearchField(searchFieldString);\n        }\n\n\n\n\n  return(\n    <div className=\"App\">\n        <h1 className='app-title'>Monsters Rolodex</h1>\n\n        <SearchBox \n          onChangeHandler = {onSearchChange}\n         placeHolder ={'Search Monsters'} \n         className='monsters-search-box'/>\n        <CardList monsters={filteredMonsters} />\n\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}